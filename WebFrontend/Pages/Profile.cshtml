@page "{handler?}"
@model ProfileModel
@{
    Layout = "Shared/_MainUI";
    ViewData["Title"] = "Settings";
}
@section scripts{
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
<h1>@Model.ErrorMessage</h1>
<div class="settings-container">
    <form method="post" enctype="multipart/form-data">
        <div class="formElement">
            <div class="formLabel"><label for="profileName">Name: </label></div>
            <div class="formInput">@Html.TextBoxFor(m => m.UserModel.Username, new { @id = "profileName" })</div>
        </div>
        <div class="formElement">
            <div class="formLabel"><label for="profileEmail">Email: </label></div>
            <div class="formInput">@Html.TextBoxFor(m => m.UserModel.Email, new { @id = "profileEmail" })</div>
        </div>
        <div class="formElement">
            <button id="save-button" asp-page-handler="Save" class="btn btn-primary">Save</button>
        </div>
    </form>
    <div class="settings-option">
        <div class="setting-heading">Change Theme</div>
        <div class="setting-content">
            <div class="switch-container">
                <input id="switchToggle" type="checkbox">
                <label for="switchToggle"></label>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    // Colour Theme Toggle
    // ------------------------------------------------------------------- //
    let themeButton = document.getElementById("switchToggle");
    // Set Toggle
    document.addEventListener("DOMContentLoaded", () => {
        themeButton.checked = document.body.classList.contains("light") ? true : false;
    });
    // Toggle Colour
    themeButton.addEventListener('click', (e) => {
        theme = e.target.checked ? "light" : "dark";
        localStorage.setItem('theme', theme);
        getTheme();
    });
</script>