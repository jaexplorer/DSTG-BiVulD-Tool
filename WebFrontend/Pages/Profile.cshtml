@page "{handler?}"
@model ProfileModel
@{
    Layout = "Shared/_MainUI";
    ViewData["Title"] = "Settings";
}
@section scripts{
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
<div id="profile-container">
    <!-- NAME AND EMAIL FORM
	------------------------------------------------------------------- -->
    <div class="profile-card">
        <div class="card-heading">Profile</div>
        <form method="post">
            <div class="form-element">
                <div class="form-label"><label for="profileName">Name: </label></div>
                <div class="form-input">@Html.TextBoxFor(m => m.UserModel.Username, new { @id = "profileName" })</div>
            </div>
            <!-- USERNAME ERRORS -->
            <div style="font-size:small">
                @Html.ValidationMessageFor(m => m.UserModel.Username, "", new { @class = "text-error" })
            </div>
            <div class="form-element">
                <div class="form-label"><label for="profileEmail">Email: </label></div>
                <div class="form-input">
                    @Html.TextBoxFor(m => m.UserModel.Email, new { @id = "profileEmail" })
                </div>
            </div>
            <!-- EMAIL ERRORS -->
            <div style="font-size:small">
                @Html.ValidationMessageFor(m => m.UserModel.Email, "", new { @class = "text-error" })
            </div>
            <div class="form-submit">
                <button asp-page-handler="Save" class="profile-btn">Save</button>
            </div>
        </form>
    </div>

     <!-- PASSWORD FORM
	------------------------------------------------------------------- -->
    <div class="profile-card">
        <div class="card-heading">Password Change</div>
        <form method="post">
            <div class="form-element">
                <div class="form-label"><label for="profilePassword">Password: </label></div>
                <div class="form-input">
                    @Html.PasswordFor(m => m.PasswordModel.Password, new { @id = "profilePassword" })
                </div>
            </div>
            <!-- PASSWORD ERROR -->
            <div style="font-size:small">
                @Html.ValidationMessageFor(m => m.PasswordModel.Password, "", new { @class = "text-error" })

            </div>
            <div class="form-element">
                <div class="form-label"><label for="passwordConfirm">Confirm: </label></div>
                <div class="form-input">
                    @Html.PasswordFor(m => m.PasswordModel.ConfirmPassword, new { @id = "passwordConfirm" })
                </div>
            </div>
            <!-- PASSWORD CONFIRM ERROR -->
            <div style="font-size:small">
                @Html.ValidationMessageFor(m => m.PasswordModel.ConfirmPassword, "", new { @class = "text-error" })
            </div>
            <div class="form-submit">
                <button asp-page-handler="SavePassword" class="profile-btn">Save</button>
            </div>
        </form>
    </div>

    <!-- STATISTICS
	------------------------------------------------------------------- -->
    <div class="profile-card">
        <div class="card-heading">Stats</div>
        <div id="summary-container">
            <div class="summary-element">
                <div class="summary-title">Last Login</div>
                <div class="summary-value">@Model.LastLogin</div>
            </div>
            <div class="summary-element">
                <div class="summary-title">Total Scans</div>
                <div class="summary-value">@Model.TotalScans</div>
            </div>
        </div>
    </div>

    <!-- CHANGE THEME
	------------------------------------------------------------------- -->
    <div class="profile-card">
        <div class="card-heading">Theme Change</div>
        <div class="switch-container">
            <input id="switch-toggle" type="checkbox">
            <label for="switch-toggle"></label>
        </div>
    </div>
</div>

<script type="text/javascript">
    // Colour Theme Toggle
    // ------------------------------------------------------------------- //
    let themeButton = document.getElementById("switch-toggle");
    // Set Toggle
    document.addEventListener("DOMContentLoaded", () => {
        themeButton.checked = document.body.classList.contains("light") ? true : false;
    });
    // Toggle Colour
    themeButton.addEventListener('click', (e) => {
        theme = e.target.checked ? "light" : "dark";
        localStorage.setItem('theme', theme);
        getTheme();
    });
</script>